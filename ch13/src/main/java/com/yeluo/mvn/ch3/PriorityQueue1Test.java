package com.yeluo.mvn.ch3;
/**
 * 
 * @author YeLuo
 * @function
 */
/**
 * 1.优先级队列中的元素可以按照任意的顺序插入,却总是按照排序的顺序进行检索.
 * 也就是说,无论何时调用remove方法,总会获得当前优先级队列中最小的元素.
 * 然而,优先级队列并没有对所有的元素进行排序.如果用迭代的方式处理这些元素,并不需要对它们进行排序.
 * 
 * 2.优先级队列用的数据结构:堆.
 * 
 * 3.与TreeSet一样,一个优先级队列既可以保存实现了Comparable接口的类对象,也可以保存在构造器中提供比较器的对象.
 * 
 * 4.使用优先级队列的典型示例是任务调度.每一个任务有一个优先级,任务以随机顺序添加到队列中,每当启动一个新的任务时,
 * 都将优先级最高的任务从队列中删除(由于习惯上将1设为"最高"优先级,所以会将最小的元素删除.
 * 
 * 5.与TreeSet中的迭代不同,这里的迭代并不是按照元素的排列顺序访问的.而删除却总是删掉剩余元素中优先级数最小的那个元素.
 */
public class PriorityQueue1Test {
	
}
